<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:pro="http://www.liquibase.org/xml/ns/pro"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
  http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd
  http://www.liquibase.org/xml/ns/pro
  http://www.liquibase.org/xml/ns/pro/liquibase-pro-4.1.xsd">
    <changeSet author="liquibase" id="20240527000000">

        <dropView viewName="elenco_servizi_view_master"/>

        <createView fullDefinition="false" viewName="elenco_servizi_view_master" replaceIfExists="true">WITH cte AS (
            SELECT p_1.id_psp,
            p_1.obj_id,
            p_1.ragione_sociale AS psp_rag_soc,
            p_1.abi,
            max(m_1.obj_id) AS id_cdi_master,
            p_1.codice_mybank
            FROM cdi_master m_1,
            psp p_1
            WHERE ((m_1.fk_psp = p_1.obj_id) AND (p_1.enabled = 'Y'::bpchar) AND (m_1.data_inizio_validita &lt; (CURRENT_DATE + 1)) AND (p_1.enabled = 'Y'::bpchar))
            GROUP BY p_1.id_psp, p_1.obj_id, p_1.ragione_sociale, p_1.abi, p_1.codice_mybank
            )
            SELECT row_number() OVER (ORDER BY m.obj_id, d.obj_id, cfcs.obj_id, cis.obj_id, pctv.obj_id, ctv.obj_id, c.obj_id, ip.obj_id, tv.obj_id) AS "OBJ_ID",
            p.id_psp AS "PSP_ID",
            (p.psp_rag_soc)::character varying(255) AS "PSP_RAG_SOC",
            (
            CASE
            WHEN (m.storno_pagamento = (0)::numeric) THEN 'N'::text
            ELSE 'Y'::text
            END)::character(1) AS "PSP_FLAG_STORNO",
            (
            CASE
            WHEN ((m.marca_bollo_digitale = (1)::numeric) AND (cn.marca_bollo_digitale = 'Y'::bpchar)) THEN 'Y'::text
            ELSE 'N'::text
            END)::character(1) AS "PSP_FLAG_BOLLO",
            m.logo_psp AS "LOGO_PSP",
            m.id_informativa_psp AS "FLUSSO_ID",
            ip.id_intermediario_psp AS "INTM_ID",
            c.id_canale AS "CANALE_ID",
            (d.nome_servizio)::character varying(255) AS "NOME_SERVIZIO",
            (
            CASE cn.modello_pagamento
            WHEN 'IMMEDIATO'::text THEN 0
            WHEN 'IMMEDIATO_MULTIBENEFICIARIO'::text THEN 1
            WHEN 'DIFFERITO'::text THEN 2
            WHEN 'ATTIVATO_PRESSO_PSP'::text THEN 4
            ELSE NULL::integer
            END)::numeric(1,0) AS "CANALE_MOD_PAG",
            tv.tipo_versamento AS "TIPO_VERS_COD",
            cis.codice_lingua AS "CODICE_LINGUA",
            NULL::character varying(35) AS "INF_COND_EC_MAX",
            cis.descrizione_servizio AS "INF_DESC_SERV",
            cis.disponibilita_servizio AS "INF_DISP_SERV",
            (cis.url_informazioni_canale)::character varying(140) AS "INF_URL_CANALE",
            CURRENT_DATE AS "TIMESTAMP_INS",
            (m.data_inizio_validita)::timestamp without time zone AS "DATA_VALIDITA",
            (cfcs.importo_minimo)::double precision AS "IMPORTO_MINIMO",
            (cfcs.importo_massimo)::double precision AS "IMPORTO_MASSIMO",
            ((cfcs.costo_fisso + cfcs.valore_commissione))::double precision AS "COSTO_FISSO",
            (d.tags)::character varying(255) AS "TAGS",
            d.logo_servizio AS "LOGO_SERVIZIO",
            (
            CASE
            WHEN ((d.canale_app = (0)::numeric) OR (d.canale_app IS NULL)) THEN 'N'::text
            ELSE 'Y'::text
            END)::character(1) AS "CANALE_APP",
            cn.on_us AS "ON_US",
            cn.carrello_carte AS "CARRELLO_CARTE",
            p.abi AS "CODICE_ABI",
            p.codice_mybank AS "CODICE_MYBANK",
            cfcs.codice_convenzione AS "CODICE_CONVENZIONE",
            cn.flag_io AS "FLAG_IO"
            FROM ((((((((((cdi_master m
            JOIN cdi_detail d ON ((d.fk_cdi_master = m.obj_id)))
            JOIN cdi_fascia_costo_servizio cfcs ON ((cfcs.fk_cdi_detail = d.obj_id)))
            JOIN cdi_informazioni_servizio cis ON ((cis.fk_cdi_detail = d.obj_id)))
            JOIN cte p ON ((m.obj_id = p.id_cdi_master)))
            JOIN psp_canale_tipo_versamento pctv ON ((pctv.obj_id = d.fk_psp_canale_tipo_versamento)))
            JOIN canale_tipo_versamento ctv ON ((ctv.obj_id = pctv.fk_canale_tipo_versamento)))
            JOIN canali c ON ((c.obj_id = ctv.fk_canale)))
            JOIN canali_nodo cn ON ((c.fk_canali_nodo = cn.obj_id)))
            JOIN intermediari_psp ip ON ((c.fk_intermediario_psp = ip.obj_id)))
            JOIN tipi_versamento tv ON ((ctv.fk_tipo_versamento = tv.obj_id)))
            WHERE ((c.enabled = 'Y'::bpchar) AND (ip.enabled = 'Y'::bpchar));</createView>

    </changeSet>
</databaseChangeLog>
