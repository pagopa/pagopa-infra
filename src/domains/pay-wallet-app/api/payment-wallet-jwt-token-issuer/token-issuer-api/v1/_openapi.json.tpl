{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "Pagopa jwt token issuer service api",
    "description": "Microservice that handle JWT token creation and method to verify those tokens"
  },
  "servers": [
    {
      "url": "https://${host}"
    }
  ],
  "tags": [
    {
      "name": "jwtIssuer",
      "description": "Api's used to generate new token and retrieve key to verify those generated tokens",
      "externalDocs": {
        "url": "https://TODO",
        "description": "Technical specifications"
      }
    }
  ],
  "paths": {
    "/tokens": {
      "post": {
        "tags": [
          "jwtIssuer"
        ],
        "operationId": "createJwtToken",
        "summary": "Create a new JWT token",
        "description": "Create a new signed JWT token with input specified claims",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formally invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateTokenRequest": {
        "type": "object",
        "properties": {
          "audience": {
            "type": "string",
            "description": "the audience (f.e. service/domain) the token is intended for, used to compose the `aud` claim"
          },
          "duration": {
            "type": "number",
            "format": "long",
            "description": "token duration in seconds (used for `exp` claim)"
          },
          "privateClaims": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "private claims key value list.\nclaims are not collision resistant so \nif a reserved claim is passed here will be ignored (such as aud, exp etc)\n"
            }
          }
        },
        "required": [
          "audience",
          "duration",
          "privateClaims"
        ]
      },
      "CreateTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "the generated token"
          }
        },
        "required": [
          "token"
        ]
      },
      "ProblemJson": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "format": "uri",
            "description": "An absolute URI that identifies the problem type. When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).",
            "default": "about:blank",
            "example": "https://example.com/problem/constraint-violation"
          },
          "title": {
            "type": "string",
            "description": "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable"
          },
          "status": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "detail": {
            "type": "string",
            "description": "A human readable explanation specific to this occurrence of the\nproblem.",
            "example": "There was an error processing the request"
          },
          "instance": {
            "type": "string",
            "format": "uri",
            "description": "An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced."
          }
        }
      },
      "HttpStatusCode": {
        "type": "integer",
        "format": "int32",
        "description": "The HTTP status code generated by the origin server for this occurrence\nof the problem.",
        "minimum": 100,
        "maximum": 600,
        "exclusiveMaximum": true,
        "example": 200
      }
    }
  }
}