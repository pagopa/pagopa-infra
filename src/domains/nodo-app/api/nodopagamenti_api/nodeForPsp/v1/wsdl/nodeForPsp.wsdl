<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="nodeForPsp"
  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
  xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata"
  xmlns:nfpsp="http://pagopa-api.pagopa.gov.it/node/nodeForPsp.xsd"
  xmlns:tns="http://pagopa-api.pagopa.gov.it/node/nodeForPsp.wsdl" targetNamespace="http://pagopa-api.pagopa.gov.it/node/nodeForPsp.wsdl">

  <wsdl:types>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
      xmlns:tns="http://pagopa-api.pagopa.gov.it/node/nodeForPsp.xsd" targetNamespace="http://pagopa-api.pagopa.gov.it/node/nodeForPsp.xsd">


      <!--Simple type-->

      <xsd:simpleType name="stText16">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="16" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stIBAN">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stIdPSP">
        <xsd:annotation>
          <xsd:documentation>
    PSP Identifier, it has been assigned from pagoPA.

    Code used in the primitive web service and in its objects exchanged with the NodoSPC.

    The code is generally represented by the **BIC** code (_Bank Identifier Code_) of the PSP.

    In the absence of the BIC code, or to handle particular situations, another code can be used, as long as it uniquely identifies the PSP.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="35" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stIdBroker">
        <xsd:annotation>
          <xsd:documentation>
    Broker Identifier, it has been assigned from pagoPA.

    Identification of the intermediary/broker of the PSP that provides the specific access (channel) to the PSP for the service delivery.

    _Note_: The intermediary/broker can coincide with the PSP itself

          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="35" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stIdChannel">
        <xsd:annotation>
          <xsd:documentation>
    Channel Identifier, it identifies a payment service category and through which the transaction is carried out.

    A Channel identifier belongs to only one PSP intermediary/broker and consequently must be unique with respect to the PSP.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="35" />
        </xsd:restriction>
      </xsd:simpleType>


      <xsd:simpleType name="stText35">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="35" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stText70">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="70" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stText140">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="140" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stText210">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="210" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stIdTransfer">
        <xsd:restriction base="xsd:int">
          <xsd:enumeration value="1" />
          <xsd:enumeration value="2" />
          <xsd:enumeration value="3" />
          <xsd:enumeration value="4" />
          <xsd:enumeration value="5" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stIdempotencyKey">
        <xsd:annotation>
          <xsd:documentation>
    `idempotencyKey`, it has been genearated from PSP.

    The `activationPaymentNotice` request expects this input parameter,  whose content is a discretion of caller, which makes the call idempotent with respect to the
    same value of `idempotencyKey`, i.e. with the same key the platform will respond with the same response.

    It's obtained as concatenation of the PSP' fiscal code followed by a `_` and a unique random string within PSP, that generated it

    The system won't check the value of the PSP tax number on the DB, but the above criteria are useful for creating and guaranteeing a unique `idempotencyKey`.

          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[0-9]{11}_[a-zA-Z0-9]{10}" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stPaymentToken">
        <xsd:annotation>
          <xsd:documentation>
    It is generated by the system during the payment activation phase, it is the correlation identifier to match activation and payment outcome.

    - **PA OLD**: the PA receives it into `CCP` (_CodiceContestoPagamento_) which uniquely identifies a single payment activity started from PSP.
    - **PA NEW**: the PA does not know it, it will receive it as a unique identifier of the receipt.

          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="35" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:complexType name="stPaymentTokens">
        <xsd:sequence>
          <xsd:element name="paymentToken" type="tns:stPaymentToken" minOccurs="1" maxOccurs="5" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:simpleType name="stPassword">
        <xsd:annotation>
          <xsd:documentation>
                    channel password, it has been assigned from pagoPA
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="8" />
          <xsd:maxLength value="15" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stCommissione">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Y" />
          <xsd:enumeration value="N" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stExpirationTime">
        <xsd:annotation>
          <xsd:documentation>
    Token expiration time ( ms ), max 30 minute.

    The duration of the payment token can be set in 2 ways :

    - _Implicitly_ from the **pagoPA** platform, if it isn't set in the request of `activatePaymentNotice` (default value duration = `30` minutes)

    - _Explicitly_ from the **PSP**, if it's set in request to the `activatePaymentNotice`

          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
          <xsd:maxInclusive value="1800000" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stEMail">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[a-zA-Z0-9_\.\+\-]+@[a-zA-Z0-9\-]+(\.[a-zA-Z0-9\-]+)*" />
          <xsd:maxLength value="256" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stAmount">
        <xsd:annotation>
          <xsd:documentation>
    Amount of payment in euro
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:decimal">
          <xsd:pattern value="\d+\.\d{2}" />
          <xsd:maxInclusive value="999999999.99" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stUUID">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stNoticeNumber">
        <xsd:annotation>
          <xsd:documentation>
    `noticeNumber` is composed by :

    `[auxDigit][segregationCode][IUVBase][IUVCheckDigit]`
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[0-9]{18}" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stPostalAccount">
        <xsd:restriction base="xsd:string">
          <xsd:length value="12" />
          <xsd:pattern value="[0-9]{12}" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stIUVCheckDigit">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[0-9]{2}" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stFiscalCodePA">
        <xsd:annotation>
          <xsd:documentation>
    Tax code of the public administration to which the payment notification is made out
          </xsd:documentation>
        </xsd:annotation>

        <xsd:restriction base="xsd:string">
          <xsd:length value="11" />
          <xsd:pattern value="[0-9]{11}" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stPaymentMethod">
        <xsd:annotation>
          <xsd:documentation>
    Method of the payment , i.e. `cash`, `creditCard`, `bancomat` or `other`
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="cash" />
          <xsd:enumeration value="creditCard" />
          <xsd:enumeration value="bancomat" />
          <xsd:enumeration value="other" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stPaymentChannel">
        <xsd:annotation>
          <xsd:documentation>
    Channel of the payment , i.e. `frontOffice`, `atm`, `onLine`, `app` or `other`
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="frontOffice" />
          <xsd:enumeration value="atm" />
          <xsd:enumeration value="onLine" />
          <xsd:enumeration value="app" />
          <xsd:enumeration value="other" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stOutcome">
        <xsd:annotation>
          <xsd:documentation>
    The outcome of the operation may contain the following result string code:

    - **OK** : operation performed successfully
    - **KO** : operation terminated with error
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OK" />
          <xsd:enumeration value="KO" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stNazioneProvincia">
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="[A-Z]{2,2}" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stEntityUniqueIdentifierValue">
        <xsd:annotation>
          <xsd:documentation>
    Alphanumeric field that can contain the tax code or, alternatively, the VAT number of the payer.

    In applicable cases, when it is not possible to identify for tax purposes the subject, the `ANONIMO` value can be used
          </xsd:documentation>
        </xsd:annotation>

        <xsd:restriction base="xsd:string">
          <xsd:minLength value="2" />
          <xsd:maxLength value="16" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stEntityUniqueIdentifierType">
        <xsd:annotation>
          <xsd:documentation>
    Alphanumeric field indicating the nature of the subject; it can assume the following values:

    - **F** : Natural person
    - **G** : Legal Person
          </xsd:documentation>
        </xsd:annotation>

        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="F" />
          <!-- Persona Fisica -->
          <xsd:enumeration value="G" />
          <!-- Persona Giuridica -->
          <xsd:length value="1" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stISODate">
        <xsd:restriction base="xsd:date" />
      </xsd:simpleType>

      <xsd:simpleType name="stAmountOptionPSP">
        <xsd:annotation>
          <xsd:documentation>
    Indicates the payment criteria accepted by public administration respect to the amount, i.e. if it accepts an `amount` for this payment option

    - equals `EQ`
    - less `LT`
    - greater `GT`
    - any `ANY`

    than indicated.
          </xsd:documentation>
        </xsd:annotation>

        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="EQ"></xsd:enumeration>          <!-- is equal to -->
          <xsd:enumeration value="LS"></xsd:enumeration>          <!-- is greater than -->
          <xsd:enumeration value="GT"></xsd:enumeration>          <!-- is less than -->
          <xsd:enumeration value="ANY"></xsd:enumeration>          <!-- -->
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stIdentificativoServizio">
        <xsd:restriction base="xsd:string">
          <xsd:length value="5" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stPaymentMethodFee">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="BBT" />
          <!-- Bonifico Bancario di Tesoreria -->
          <xsd:enumeration value="BP" />
          <!-- Bollettino Postale -->
          <xsd:enumeration value="AD" />
          <!-- Addebito Diretto -->
          <xsd:enumeration value="CP" />
          <!-- Carta di Pagamento -->
          <xsd:enumeration value="PO" />
          <!-- Pagamento attivato presso PSP  -->
          <xsd:enumeration value="OBEP" />
          <!-- Online Banking Electronic Payment -->
          <xsd:enumeration value="JIF" />
          <!-- Bancomat Pay  -->
          <xsd:enumeration value="MYBK" />
          <!-- MyBank Seller Bank -->
          <xsd:enumeration value="PPAL" />
          <!-- PayPal -->
          <xsd:maxLength value="4" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stTouchpointFee">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="IO" />
          <xsd:enumeration value="WISP" />
          <xsd:enumeration value="CHECKOUT" />
          <xsd:enumeration value="PSP" />
          <!-- Pagamento presso PSP  generico -->
          <xsd:enumeration value="ATM" />
          <!-- Pagamento presso PSP  ATM -->
          <xsd:enumeration value="BETTING" />
          <!-- Pagamento presso PSP  ricevitoria -->
          <xsd:enumeration value="TS" />
          <!-- Pagamento presso PSP  tabaccheria -->
          <xsd:enumeration value="HB" />
          <!-- Pagamento presso PSP  home banking -->
          <xsd:maxLength value="10" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stBase64Binary72">
        <xsd:restriction base="xsd:base64Binary">
          <xsd:pattern value=".{4,72}" />
        </xsd:restriction>
      </xsd:simpleType>

      <xsd:simpleType name="stTipoBolloDigitale">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="01" />
          <xsd:length value="2" />
        </xsd:restriction>
      </xsd:simpleType>

      <!--Complex type-->

      <xsd:complexType name="ctEntityUniqueIdentifier">
        <xsd:sequence>
          <xsd:element name="entityUniqueIdentifierType" type="tns:stEntityUniqueIdentifierType" />
          <xsd:element name="entityUniqueIdentifierValue" type="tns:stEntityUniqueIdentifierValue" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ctSubject">
        <xsd:annotation>
          <xsd:documentation>
    Contains all data for the subject of payment :

    - `uniqueIdentifier` : (_see below to details_)
    - `fullName` : name of the subject
    - `streetName` : street name
    - `civicNumber` : building number
    - `postalCode` : postal code
    - `city` : town name
    - `stateProvinceRegion` : country subdivision
    - `country` : country name
    - `e-mail` : remittance location electronic address

          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element name="uniqueIdentifier" type="tns:ctEntityUniqueIdentifier" />
          <xsd:element name="fullName" type="tns:stText70" />
          <xsd:element name="streetName" type="tns:stText70" minOccurs="0" />
          <xsd:element name="civicNumber" type="tns:stText16" minOccurs="0" />
          <xsd:element name="postalCode" type="tns:stText16" minOccurs="0" />
          <xsd:element name="city" type="tns:stText35" minOccurs="0" />
          <xsd:element name="stateProvinceRegion" type="tns:stText35" minOccurs="0" />
          <xsd:element name="country" type="tns:stNazioneProvincia" minOccurs="0" />
          <xsd:element name="e-mail" type="tns:stEMail" minOccurs="0" />
        </xsd:sequence>
      </xsd:complexType>


      <xsd:complexType name="ctResponse">
        <xsd:sequence>
          <xsd:element name="outcome" type="tns:stOutcome" />
          <xsd:element name="fault" type="tns:ctFaultBean" minOccurs="0" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:simpleType name="stFaultCode">
        <xsd:annotation>
          <xsd:documentation>
            All fault codes are described
            <a href="https://docs.google.com/spreadsheets/d/15sJplTLu6kWPomW3jbBzZYvD7QyIswERKktFG0bk1IQ/edit?usp=sharing" target="_blank">here</a>
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string"></xsd:restriction>
      </xsd:simpleType>

      <xsd:complexType name="ctFaultBean">
        <xsd:annotation>
          <xsd:documentation>
    - `id` : Subject issuing the error.
    Allowed values ​​are :
      - `NodoDeiPagamentiSPC` : constant which identifies the NodoSPC
      - `[domain identifier]` : domain id of the creditor entity issuing the fault
      - `[PSP identifier]` : PSP identifier issuing the fault

    - `faultCode` : error code (see `stFaultCode` to details)

    - `faultString` : Specification of the error code, specific to the subject issuing it. Contains a more talking description relating to the `faultCode`.

    - `description` : Additional description of the error set by the NodoSPC, by the creditor or PSP.

    - `serial` : Position of the element in the referenced list. Useful when providing a parameter in the form of a vector (for example, in the primitive `SendCarrelloRPT` node).
    If the error is generated by the EC or by the PSP, the data reported is the value of the `faultBean.serial` data set by the EC or by the PSP.

    - `originalFaultCode` : Error code generated by the counterpart. (_Set only it isn't generated by NodoSPC._)

    - `originalFaultString` : Specification of the error code generated by the counterpart. (_Set only it isn't generated by NodoSPC._)

    - `originalDescription` : Additional description of the error generated by the counterparty. (_Set only it isn't generated by NodoSPC._)
          </xsd:documentation>
        </xsd:annotation>

        <xsd:sequence>
          <xsd:element name="faultCode" type="tns:stFaultCode" />
          <xsd:element name="faultString" type="xsd:string" />
          <xsd:element name="id" type="xsd:string" />
          <xsd:element name="description" type="xsd:string" minOccurs="0" />
          <xsd:element name="serial" type="xsd:int" minOccurs="0" />
          <xsd:element name="originalFaultCode" type="xsd:string" minOccurs="0" />
          <xsd:element name="originalFaultString" type="xsd:string" minOccurs="0" />
          <xsd:element name="originalDescription" type="xsd:string" minOccurs="0" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ctQrCode">
        <xsd:annotation>
          <xsd:documentation>
    Payment Notice **QR-CODE** data.
    QR-CODE is ISO/IEC 18004:2015 compliant generated with:

    Parameters for generating the QR-CODE

    - Symbol Version : 4
    - Modules : 33x33
    - Modules width : 3 pixels
    - ECC Level: M ( max correction error 15%)
    - Character set : UTF-8

    QR-CODE contains a string formatted as :
    `PAGOPA|002|noticeNumber|fiscalCode|amount`

    Where `noticeNumber` is composed by :

    `[auxDigit][segregationCode][IUVBase][IUVCheckDigit]`

    While `fiscalCode` is the creditor tax code.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element name="fiscalCode" type="tns:stFiscalCodePA" />
          <xsd:element name="noticeNumber" type="tns:stNoticeNumber" />
        </xsd:sequence>
      </xsd:complexType>

      <!-- Payment List : verify response -->
      <xsd:complexType name="ctPaymentOptionDescription">
        <xsd:sequence>
          <xsd:element name="amount" type="tns:stAmount" />
          <xsd:element name="options" type="tns:stAmountOptionPSP" />
          <xsd:element name="dueDate" type="tns:stISODate" minOccurs="0" />
          <!-- Data di scadenza del pagamento -->
          <xsd:element name="paymentNote" type="tns:stText210" minOccurs="0" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ctPaymentOptionBollettinoDescription">
        <xsd:sequence>
          <xsd:element name="amount" type="tns:stAmount" />
          <xsd:element name="options" type="tns:stAmountOptionPSP" />
          <xsd:element name="dueDate" type="tns:stISODate" minOccurs="0" />
          <!-- Data di scadenza del pagamento -->
          <xsd:element name="paymentNote" type="tns:stText210" minOccurs="0" />
          <xsd:element name="allCCP" type="xsd:boolean" minOccurs="1" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ctPaymentOptionsDescriptionList">
        <xsd:annotation>
          <xsd:documentation>
    Structure containing the details of possible payments relating to the debt position to be paid.

    Currently set at 5 eligible payments per single position.

    Where each `paymentOptionDescription` items contains :

    - `amount` : payment amount
    - `options` : indicates the payment criteria accepted by the institution with respect to the amount, or if it accepts for this payment option other than `amount`.
    - `dueDate` : indicates the expiration payment date according to the ISO 8601 format `[YYYY]-[MM]-[DD]`.
    - `paymentNote` : Free text available to describe the payment reasons

          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element name="paymentOptionDescription" type="tns:ctPaymentOptionDescription" maxOccurs="5" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ctPaymentOptionsBollettinoDescriptionList">
        <xsd:sequence>
          <xsd:element name="paymentOptionDescription" type="tns:ctPaymentOptionBollettinoDescription" maxOccurs="5" />
        </xsd:sequence>
      </xsd:complexType>


      <!-- Transfer List : activate response -->

      <xsd:complexType name="ctTransferPSP">
        <xsd:sequence>
          <xsd:element name="idTransfer" type="tns:stIdTransfer" />
          <xsd:element name="transferAmount" type="tns:stAmount" />
          <xsd:element name="fiscalCodePA" type="tns:stFiscalCodePA" />
          <xsd:element name="IBAN" type="tns:stIBAN" />
          <xsd:element name="remittanceInformation" type="tns:stText140" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ctTransferListPSP">
        <xsd:annotation>
          <xsd:documentation>
    Structure containing the details of possible tranfer payments.

    Currently set at 5 eligible payments per single position.

    Where each `transfer` items contains :

    - `idTransfer` : index of the list
    - `transferAmount` : amount
    - `fiscalCodePA` : Tax code of the public administration
    - `IBAN` : contains the IBAN of the account to be credited
    - `remittanceInformation` : reason for payment (_alias_ `causaleVersamento`)
          </xsd:documentation>
        </xsd:annotation>

        <xsd:sequence>
          <xsd:element name="transfer" type="tns:ctTransferPSP" maxOccurs="5" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ctTransferListPSPV2">
        <xsd:sequence>
          <xsd:element name="transfer" type="tns:ctTransferPSPV2" maxOccurs="5" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ctMapEntry">
        <xsd:sequence>
          <xsd:element name="key" type="tns:stText140" />
          <xsd:element name="value" type="tns:stText140" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ctMetadata">
        <xsd:sequence>
          <xsd:element name="mapEntry" type="tns:ctMapEntry" minOccurs="1" maxOccurs="10"></xsd:element>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ctMarcaDaBollo">
        <xsd:sequence>
          <xsd:element name="paymentToken" type="tns:stPaymentToken" />
          <xsd:element name="idTransfer" type="tns:stIdTransfer" />
          <xsd:element name="MBDAttachment" type="xsd:base64Binary" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ctListaMarcheDaBollo">
        <xsd:sequence>
          <xsd:element name="marcaDaBollo" type="tns:ctMarcaDaBollo" maxOccurs="25" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ctTransferPSPV2">
        <xsd:sequence>
          <xsd:element name="idTransfer" type="tns:stIdTransfer" />
          <xsd:element name="transferAmount" type="tns:stAmount" />
          <xsd:element name="fiscalCodePA" type="tns:stFiscalCodePA" />
          <xsd:choice minOccurs="0">
            <xsd:element name="IBAN" type="tns:stIBAN" />
            <xsd:element name="richiestaMarcaDaBollo" type="tns:ctRichiestaMarcaDaBollo" />
          </xsd:choice>
          <xsd:element name="remittanceInformation" type="tns:stText140" />
          <xsd:element name="metadata" type="tns:ctMetadata" minOccurs="0" />
        </xsd:sequence>
      </xsd:complexType>


      <xsd:complexType name="ctRichiestaMarcaDaBollo">
        <xsd:sequence>
          <xsd:element name="hashDocumento" type="tns:stBase64Binary72" />
          <xsd:element name="tipoBollo" type="tns:stTipoBolloDigitale" />
          <xsd:element name="provinciaResidenza" type="tns:stNazioneProvincia" />
        </xsd:sequence>
      </xsd:complexType>

      <!--Element req/res-->

      <xsd:complexType name="verificaBollettinoReq">
        <xsd:sequence>
          <xsd:element name="idPSP" type="tns:stIdPSP" />
          <xsd:element name="idBrokerPSP" type="tns:stIdBroker" />
          <xsd:element name="idChannel" type="tns:stIdChannel" />
          <xsd:element name="password" type="tns:stPassword" />
          <xsd:element name="ccPost" type="tns:stPostalAccount" />
          <xsd:element name="noticeNumber" type="tns:stNoticeNumber" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="verificaBollettinoRes">
        <xsd:complexContent>
          <xsd:extension base="tns:ctResponse">

            <xsd:sequence>
              <xsd:element name="paymentBollettinoList" type="tns:ctPaymentOptionsBollettinoDescriptionList" minOccurs="0" />
              <!--
                if PA OLD configured paymentDescription shall be set as with response:
                nodoVerificaRPTRisposta" type="ppt:esitoNodoVerificaRPTRisposta
                  > nodoTipoDatiPagamentoPA
                    > stCausaleVersamento (140)
                    > ctSpezzoniCausaleVersamento:spezzoneCausaleVersamento(35*6)
              -->
              <xsd:element name="paymentDescription" type="tns:stText210" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>
                                    full text description
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="fiscalCodePA" type="tns:stFiscalCodePA" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>
    tax code of the public administration to which the payment notification is made out
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="noticeNumber" type="tns:stNoticeNumber" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>
    notice number requested
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>

              <xsd:element name="companyName" type="tns:stText140" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>
    Public Administration full name
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="officeName" type="tns:stText140" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>
    Public Admninistration Department Name
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <!-- <xsd:element name="chargePA" type="tns:stAmount" minOccurs="0" /> -->
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>

      <xsd:complexType name="verifyPaymentNoticeReq">
        <xsd:annotation>
          <xsd:documentation>
    Its a request to verify payment starting from a payment notice.

    The PSP shall call it to verify the payment notice and obtains all payment options available for this debt position.
          </xsd:documentation>
        </xsd:annotation>

        <xsd:sequence>
          <xsd:element name="idPSP" type="tns:stIdPSP" />
          <xsd:element name="idBrokerPSP" type="tns:stIdBroker" />
          <xsd:element name="idChannel" type="tns:stIdChannel" />
          <xsd:element name="password" type="tns:stPassword" />
          <xsd:element name="qrCode" type="tns:ctQrCode" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="verifyPaymentNoticeRes">
        <xsd:annotation>
          <xsd:documentation>
    Its a response to `verifyPaymentNoticeReq` and contains :

    - `outcome` and _optional_ `fault` (_see below to details_)
    - `paymentList` : the list of all available payment options (_see below to details_)
    - `paymentDescription` :

    If the Public Administration is configured as _OLD_ (i.e. still uses the old primitives) this field must be set with the data `nodoTipoDatiPagamentoPA` of the `nodoVerificaRPTRisposta` specifically with:
    - `causaleVersamento`: represents the extended description of the reason for the payment
    or
    - `spezzoniCausaleVersamento`: structure available to Public Administration to specify the payment reasons.

    The size of the current field is such as to allow the concatenation of the old information previously described.

    - `companyName` : Public Administration full name
    - `officeName` : Public Administration Department Name
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
          <xsd:extension base="tns:ctResponse">
            <xsd:sequence>
              <xsd:element name="paymentList" type="tns:ctPaymentOptionsDescriptionList" minOccurs="0" />
              <xsd:element name="paymentDescription" type="tns:stText210" minOccurs="0"></xsd:element>
              <xsd:element name="fiscalCodePA" type="tns:stFiscalCodePA" minOccurs="0"></xsd:element>
              <xsd:element name="companyName" type="tns:stText140" minOccurs="0"></xsd:element>
              <xsd:element name="officeName" type="tns:stText140" minOccurs="0"></xsd:element>
              <!-- <xsd:element name="chargePA" type="tns:stAmount" minOccurs="0" /> -->
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>


      <xsd:complexType name="activatePaymentNoticeReq">
        <xsd:annotation>
          <xsd:documentation>
    This request permits a PSP starting a payment process.

    The `amount` should not match with `amount` received into `verifyPaymentNotice` response.

    If the PA is configured as _OLD_ , if there is no `amount` in input, the system shall return an error to the PSP.
    **NOTE** : _the `amount` is required for `paaAttivaRPT`_
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element name="idPSP" type="tns:stIdPSP" />
          <xsd:element name="idBrokerPSP" type="tns:stIdBroker" />
          <xsd:element name="idChannel" type="tns:stIdChannel" />
          <xsd:element name="password" type="tns:stPassword" />
          <xsd:element name="idempotencyKey" type="tns:stIdempotencyKey" minOccurs="0" />
          <xsd:element name="qrCode" type="tns:ctQrCode" />
          <!-- expirationTime related to TOKEN generated by nodoSPC -->
          <!-- expirationTime is set to 30min as default by NodoSPC -->
          <xsd:element name="expirationTime" type="tns:stExpirationTime" minOccurs="0" />
          <!-- required , neeed to importoSingoloVersamento present in to paaAttivaRPT -->
          <xsd:element name="amount" type="tns:stAmount" />
          <!-- Data di scadenza del pagamento -->
          <xsd:element name="dueDate" type="tns:stISODate" minOccurs="0" />
          <xsd:element name="paymentNote" type="tns:stText210" minOccurs="0" />
        </xsd:sequence>
      </xsd:complexType>

      <!--
        if PA OLD configured
          if DUE_DATE not set :
            set DB_DUE_DATE to actual time
       -->
      <xsd:complexType name="activatePaymentNoticeRes">
        <xsd:annotation>
          <xsd:documentation>
    Its a response to `activatePaymentNoticeReq` and contains :

    - `outcome` and _optional_ `fault` (_see below to details_)
    - `totalAmount` (_see below to details_)
    - `paymentDescription` :

    If the Public Admninistration is configured as _OLD_ (i.e. still uses the old primitives) this field must be set with the data `nodeTipoDatiPagamentoPA` of the` nodeVerificaRPTRanspond` specifically:
    - `causaleVersamento`: represents the extended description of the reason for the payment, or
    - `spezzoniCausaleVersamento`: structure available to Public Administration to specify the payment reasons.

    The size of the current field is such as to allow the concatenation of the old information previously described.

    - `companyName` : Public Administration full name
    - `officeName` : Public Admninistration Department Name
    - `paymentToken` (_see below to details_)
    - `transferList` : : the list of all available transfer (_see below to details_)
    - `creditorReferenceId` : it contains a **IUV**. The **IUV** code is assigned by PA through the generation rules provided by _SANP_.
    The **IUV** code constitutes the element through which the PA receives all the information that characterizes the payment.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
          <xsd:extension base="tns:ctResponse">
            <xsd:sequence>
              <xsd:element name="totalAmount" type="tns:stAmount" minOccurs="0" />
              <xsd:element name="paymentDescription" type="tns:stText140" minOccurs="0" />
              <!-- TODOPS -->
              <xsd:element name="fiscalCodePA" type="tns:stFiscalCodePA" minOccurs="0" />
              <xsd:element name="companyName" type="tns:stText140" minOccurs="0" />
              <xsd:element name="officeName" type="tns:stText140" minOccurs="0" />
              <!-- <xsd:element name="chargePA" type="tns:stAmount" minOccurs="0" /> -->
              <xsd:element name="paymentToken" type="tns:stPaymentToken" minOccurs="0" />
              <xsd:element name="transferList" type="tns:ctTransferListPSP" minOccurs="0" />
              <xsd:element name="creditorReferenceId" type="tns:stText35" minOccurs="0" />
              <!--IUV -->
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>

      <xsd:complexType name="ctOutcomeDetails">
        <xsd:annotation>
          <xsd:documentation>
    The outcome details contains a payment method and channel , a PSP's fee, the `payer` subject and two date :
    - `applicationDate` : when payment is made
    - `transferDate` : transfer order date, the date of effective transfer amount

          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element name="paymentMethod" type="tns:stPaymentMethod" />
          <xsd:element name="paymentChannel" type="tns:stPaymentChannel" minOccurs="0" />
          <!-- <xsd:element name="chargePA" type="tns:stAmount" minOccurs="0" /> -->
          <xsd:element name="fee" type="tns:stAmount" />
          <xsd:element name="payer" type="tns:ctSubject" minOccurs="0" />
          <xsd:element name="applicationDate" type="tns:stISODate" />
          <!--data applicativa-->
          <xsd:element name="transferDate" type="tns:stISODate" />
          <!--data di disposizione bonifico-->
        </xsd:sequence>

      </xsd:complexType>

      <xsd:complexType name="ctOutcomeDetailsV2">
        <xsd:sequence>
          <xsd:element name="paymentMethod" type="tns:stPaymentMethod" />
          <xsd:element name="paymentChannel" type="tns:stPaymentChannel" minOccurs="0" />
          <xsd:element name="fee" type="tns:stAmount" />
          <xsd:element name="primaryCiIncurredFee" type="tns:stAmount" minOccurs="0" />
          <xsd:element name="idBundle" type="tns:stText70" minOccurs="0" />
          <xsd:element name="idCiBundle" type="tns:stText70" minOccurs="0" />
          <xsd:element name="payer" type="tns:ctSubject" minOccurs="0" />
          <xsd:element name="applicationDate" type="tns:stISODate" />
          <!--data applicativa-->
          <xsd:element name="transferDate" type="tns:stISODate" />
          <!--data di disposizione bonifico-->
          <xsd:element name="marcheDaBollo" type="tns:ctListaMarcheDaBollo" minOccurs="0" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="sendPaymentOutcomeReq">
        <xsd:annotation>
          <xsd:documentation>
    This request permits a PSP to send a receipt.

    The `details` field contains the details of the payment made by the user.

          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element name="idPSP" type="tns:stIdPSP" />
          <xsd:element name="idBrokerPSP" type="tns:stIdBroker" />
          <xsd:element name="idChannel" type="tns:stIdChannel" />
          <xsd:element name="password" type="tns:stPassword" />
          <xsd:element name="paymentToken" type="tns:stPaymentToken" />
          <xsd:element name="outcome" type="tns:stOutcome" />
          <xsd:element name="details" type="tns:ctOutcomeDetails" minOccurs="0" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="sendPaymentOutcomeRes">
        <xsd:complexContent>
          <xsd:extension base="tns:ctResponse"></xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>

      <xsd:complexType name="ctHandledException">
        <xsd:sequence>
          <xsd:element name="originalFaultCode" type="xsd:string" minOccurs="0" />
          <xsd:element name="originalFaultString" type="xsd:string" minOccurs="0" />
          <xsd:element name="originalDescription" type="xsd:string" minOccurs="0" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="demandPaymentNoticeRequest">
        <xsd:sequence>
          <xsd:element name="idPSP" type="tns:stIdPSP" />
          <xsd:element name="idBrokerPSP" type="tns:stIdBroker" />
          <xsd:element name="idChannel" type="tns:stIdChannel" />
          <xsd:element name="password" type="tns:stPassword" />
          <xsd:element name="idServizio" type="tns:stIdentificativoServizio" maxOccurs="1" />
          <xsd:element name="datiSpecificiServizio" type="xsd:base64Binary" maxOccurs="1" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="demandPaymentNoticeResponse">
        <xsd:complexContent>
          <xsd:extension base="tns:ctResponse">
            <xsd:sequence>
              <xsd:element name="qrCode" type="tns:ctQrCode" minOccurs="0"/>
              <xsd:element name="paymentList" type="tns:ctPaymentOptionsDescriptionList" minOccurs="0" maxOccurs="1" />
              <xsd:element name="paymentDescription" type="tns:stText210" minOccurs="0"></xsd:element>
              <xsd:element name="fiscalCodePA" type="tns:stFiscalCodePA" minOccurs="0"></xsd:element>
              <xsd:element name="companyName" type="tns:stText140" minOccurs="0"></xsd:element>
              <xsd:element name="officeName" type="tns:stText140" minOccurs="0"></xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>

      <xsd:complexType name="nodoChiediCatalogoServiziV2Request">
        <xsd:sequence>
          <xsd:element name="identificativoPSP" type="tns:stText35"/>
          <xsd:element name="identificativoIntermediarioPSP" type="tns:stText35"/>
          <xsd:element name="identificativoCanale" type="tns:stText35"/>
          <xsd:element name="password" type="tns:stPassword"/>
          <xsd:element name="identificativoDominio" type="tns:stText35" minOccurs="0"/>
          <xsd:element name="categoria" type="tns:stText35" minOccurs="0"/>
          <xsd:element name="commissione" type="tns:stCommissione" minOccurs="0"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="nodoChiediCatalogoServiziV2Response">
        <xsd:complexContent>
          <xsd:extension base="tns:ctResponse">
            <xsd:sequence>
              <xsd:element name="xmlCatalogoServizi" type="xsd:base64Binary" minOccurs="0" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>


      <xsd:complexType name="activatePaymentNoticeV2Request">
        <xsd:sequence>
          <xsd:element name="idPSP" type="tns:stIdPSP" />
          <xsd:element name="idBrokerPSP" type="tns:stIdBroker" />
          <xsd:element name="idChannel" type="tns:stIdChannel" />
          <xsd:element name="password" type="tns:stPassword" />
          <xsd:element name="idempotencyKey" type="tns:stIdempotencyKey" minOccurs="0" />
          <xsd:element name="qrCode" type="tns:ctQrCode" />
          <xsd:element name="expirationTime" type="tns:stExpirationTime" minOccurs="0" />
          <xsd:element name="amount" type="tns:stAmount" />
          <xsd:element name="dueDate" type="tns:stISODate" minOccurs="0" />
          <xsd:element name="paymentNote" type="tns:stText210" minOccurs="0" />
          <xsd:element name="paymentMethod" type="tns:stPaymentMethodFee" minOccurs="0" />
          <xsd:element name="touchPoint" type="tns:stTouchpointFee" minOccurs="0" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="activatePaymentNoticeV2Response">
        <xsd:complexContent>
          <xsd:extension base="tns:ctResponse">
            <xsd:sequence>
              <xsd:element name="totalAmount" type="tns:stAmount" minOccurs="0" />
              <xsd:element name="paymentDescription" type="tns:stText140" minOccurs="0" />
              <xsd:element name="fiscalCodePA" type="tns:stFiscalCodePA" minOccurs="0" />
              <xsd:element name="companyName" type="tns:stText140" minOccurs="0" />
              <xsd:element name="officeName" type="tns:stText140" minOccurs="0" />
              <xsd:element name="paymentToken" type="tns:stPaymentToken" minOccurs="0" />
              <xsd:element name="transferList" type="tns:ctTransferListPSPV2" minOccurs="0" />
              <xsd:element name="metadata" type="tns:ctMetadata" minOccurs="0" />
              <xsd:element name="creditorReferenceId" type="tns:stText35" minOccurs="0" />
              <xsd:element name="suggestedUserFee" type="tns:stAmount" minOccurs="0" />
              <xsd:element name="suggestedPaFee" type="tns:stAmount" minOccurs="0" />
              <xsd:element name="suggestedIdBundle" type="tns:stText70" minOccurs="0" />
              <xsd:element name="suggestedIdCiBundle" type="tns:stText70" minOccurs="0" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>

      <xsd:complexType name="sendPaymentOutcomeV2Request">
        <xsd:sequence>
          <xsd:element name="idPSP" type="tns:stIdPSP" />
          <xsd:element name="idBrokerPSP" type="tns:stIdBroker" />
          <xsd:element name="idChannel" type="tns:stIdChannel" />
          <xsd:element name="password" type="tns:stPassword" />
          <xsd:element name="idempotencyKey" type="tns:stIdempotencyKey" minOccurs="0" />
          <xsd:element name="paymentTokens" type="tns:stPaymentTokens" />
          <xsd:element name="outcome" type="tns:stOutcome" />
          <xsd:element name="details" type="tns:ctOutcomeDetailsV2" minOccurs="0" />
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="sendPaymentOutcomeV2Response">
        <xsd:complexContent>
          <xsd:extension base="tns:ctResponse"></xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>

      <!-- step#4 -->
      <!-- Wrapper Elements -->
      <xsd:element name="verificaBollettinoReq" type="tns:verificaBollettinoReq" />
      <xsd:element name="verificaBollettinoRes" type="tns:verificaBollettinoRes" />
      <xsd:element name="verifyPaymentNoticeReq" type="tns:verifyPaymentNoticeReq" />
      <xsd:element name="verifyPaymentNoticeRes" type="tns:verifyPaymentNoticeRes" />
      <xsd:element name="activatePaymentNoticeReq" type="tns:activatePaymentNoticeReq" />
      <xsd:element name="activatePaymentNoticeRes" type="tns:activatePaymentNoticeRes" />
      <xsd:element name="sendPaymentOutcomeReq" type="tns:sendPaymentOutcomeReq" />
      <xsd:element name="sendPaymentOutcomeRes" type="tns:sendPaymentOutcomeRes" />
      <xsd:element name="demandPaymentNoticeRequest" type="tns:demandPaymentNoticeRequest" />
      <xsd:element name="demandPaymentNoticeResponse" type="tns:demandPaymentNoticeResponse" />
      <xsd:element name="nodoChiediCatalogoServiziV2Request" type="tns:nodoChiediCatalogoServiziV2Request" />
      <xsd:element name="nodoChiediCatalogoServiziV2Response" type="tns:nodoChiediCatalogoServiziV2Response" />
      <xsd:element name="activatePaymentNoticeV2Request" type="tns:activatePaymentNoticeV2Request" />
      <xsd:element name="activatePaymentNoticeV2Response" type="tns:activatePaymentNoticeV2Response" />
      <xsd:element name="sendPaymentOutcomeV2Request" type="tns:sendPaymentOutcomeV2Request" />
      <xsd:element name="sendPaymentOutcomeV2Response" type="tns:sendPaymentOutcomeV2Response" />
      <!-- fault messages -->
      <xsd:element name="handledException" type="tns:ctHandledException" />


    </xsd:schema>
  </wsdl:types>

  <!-- step#3 -->
  <wsdl:message name="verificaBollettinoReq">
    <wsdl:part name="requestBody" element="nfpsp:verificaBollettinoReq" />
  </wsdl:message>

  <wsdl:message name="verificaBollettinoRes">
    <wsdl:part name="responseBody" element="nfpsp:verificaBollettinoRes" />
  </wsdl:message>

  <wsdl:message name="verifyPaymentNoticeReq">
    <wsdl:part name="requestBody" element="nfpsp:verifyPaymentNoticeReq" />
  </wsdl:message>

  <wsdl:message name="verifyPaymentNoticeRes">
    <wsdl:part name="responseBody" element="nfpsp:verifyPaymentNoticeRes" />
  </wsdl:message>

  <wsdl:message name="activatePaymentNoticeReq">
    <wsdl:part name="requestBody" element="nfpsp:activatePaymentNoticeReq" />
  </wsdl:message>
  <wsdl:message name="activatePaymentNoticeRes">
    <wsdl:part name="responseBody" element="nfpsp:activatePaymentNoticeRes" />
  </wsdl:message>

  <wsdl:message name="handledException">
    <wsdl:part name="fault" element="nfpsp:handledException" />
  </wsdl:message>

  <wsdl:message name="sendPaymentOutcomeReq">
    <wsdl:part name="requestBody" element="nfpsp:sendPaymentOutcomeReq" />
  </wsdl:message>
  <wsdl:message name="sendPaymentOutcomeRes">
    <wsdl:part name="responseBody" element="nfpsp:sendPaymentOutcomeRes" />
  </wsdl:message>

  <wsdl:message name="demandPaymentNotice">
    <wsdl:part name="requestBody" element="nfpsp:demandPaymentNoticeRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="demandPaymentNoticeResponse">
    <wsdl:part name="responseBody" element="nfpsp:demandPaymentNoticeResponse"></wsdl:part>
  </wsdl:message>

  <wsdl:message name="nodoChiediCatalogoServiziV2">
    <wsdl:part name="requestBody" element="nfpsp:nodoChiediCatalogoServiziV2Request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="nodoChiediCatalogoServiziV2Response">
    <wsdl:part name="responseBody" element="nfpsp:nodoChiediCatalogoServiziV2Response"></wsdl:part>
  </wsdl:message>

  <wsdl:message name="activatePaymentNoticeV2">
    <wsdl:part name="requestBody" element="nfpsp:activatePaymentNoticeV2Request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="activatePaymentNoticeV2Response">
    <wsdl:part name="responseBody" element="nfpsp:activatePaymentNoticeV2Response"></wsdl:part>
  </wsdl:message>

  <wsdl:message name="sendPaymentOutcomeV2">
    <wsdl:part name="requestBody" element="nfpsp:sendPaymentOutcomeV2Request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendPaymentOutcomeV2Response">
    <wsdl:part name="responseBody" element="nfpsp:sendPaymentOutcomeV2Response"></wsdl:part>
  </wsdl:message>

  <!-- step#2 -->
  <wsdl:portType name="nodeForPsp_PortType">
    <wsdl:operation name="verificaBollettino">
      <wsdl:documentation>

**NOTE** : valid only for [Poste Italiane](https://www.poste.it/)

Interrogazione del bollettino postale PA contenuto all'interno dell'avviso di pagamento.

Ogni bollettino postale PA e' identificato per mezzo delle informazioni contenute all'interno del [data-matrix](https://docs.italia.it/italia/pagopa/pagopa-specifichepagamenti-docs/it/stabile/_docs/SANP_2.2_Sez3_Cap10_PagamentoPressoPSP.html), ovvero conto corrente postale e numero avviso.

L'operazione ritorna tutti le possibili opzioni di pagamento disponibili per l'avviso di pagamnto.
      </wsdl:documentation>
      <wsdl:input message="tns:verificaBollettinoReq" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/verificaBollettinoReq" />
      <wsdl:output message="tns:verificaBollettinoRes" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/verificaBollettinoRes" />
      <wsdl:fault message="tns:handledException" name="handledException" />
    </wsdl:operation>

    <wsdl:operation name="verifyPaymentNotice">
      <wsdl:documentation>
Gets Payment Notice Data. A Payment Notice is identified by its QR-CODE data.

The operation returns available payment options to the user. Each payment options describes the acceptance `amount` values to be used requesting a payment activation ( see _activatePaymentNotice_ ).

      </wsdl:documentation>
      <wsdl:input message="tns:verifyPaymentNoticeReq" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/verifyPaymentNoticeReq" />
      <wsdl:output message="tns:verifyPaymentNoticeRes" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/verifyPaymentNoticeRes" />
      <wsdl:fault message="tns:handledException" name="handledException" />
    </wsdl:operation>
    <wsdl:operation name="activatePaymentNotice">
      <wsdl:documentation>
Request a payment activation, it returns a `paymentToken`.

Payment amount shall be equal to a payment option returned by `verifyPaymentNotice` ; if omitted,  it will setted by the public administration.
The operation supports client idempotency for safely retrying requests without accidentally performing the same operation twice ( or to retrieve missed responses).
The idempontency key works by saving the resulting status code and body of the first request made for any given idempotency key if its status is **OK**.
Subsequent request with the same key return the same result, except for error codes.

An idempotency key is a unique value generated by the client which the server uses to recognize subsequent retries of the same request.
How you create unique keys is up to you, but we suggest using a random string with enough entropy to avoid collisions. _(see `stIdempotencyKey` definition for details)_
Keys are eligible to be removed from the system automatically after they are at least 24 hours old, and a new request is generated if a key is reused after the original has been pruned.
The idempotency layer compares incoming parameters to those of the original request and errors unless they're the same to prevent accidental misuse.

The `paymentToken` is a unique key with no expiration date _( as default, see `expirationTime` definition for details)_ , and allow a PSP to start an user payment session _(see `stPaymentToken` definition for details)_, until the receipt of a `sendPaymentOutcome`.

Any subsequent request for the same payment notice will be denied.
      </wsdl:documentation>
      <wsdl:input message="tns:activatePaymentNoticeReq" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/activatePaymentNoticeReq" />
      <wsdl:output message="tns:activatePaymentNoticeRes" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/activatePaymentNoticeRes" />
      <wsdl:fault message="tns:handledException" name="handledException" />
    </wsdl:operation>
    <wsdl:operation name="sendPaymentOutcome">
      <wsdl:documentation>
Close payment session associated with the paymentToken.
The outcome can be positive or negative.

if **positive**, the psp SHALL fill the _details_

The operation use the paymentToken as idempotency key for safely retrying requests without accidentally performing the same operation twice ( or to retrieve missed responses).
The idempotency layer compares incoming parameters to those of the original request and errors unless they're the same to prevent accidental misuse.

      </wsdl:documentation>
      <wsdl:input message="tns:sendPaymentOutcomeReq" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/sendPaymentOutcomeReq" />
      <wsdl:output message="tns:sendPaymentOutcomeRes" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/sendPaymentOutcomeRes" />
      <wsdl:fault message="tns:handledException" name="handledException" />
    </wsdl:operation>

    <wsdl:operation name="demandPaymentNotice">
      <wsdl:input message="tns:demandPaymentNotice" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/demandPaymentNotice"/>
      <wsdl:output message="tns:demandPaymentNoticeResponse" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/demandPaymentNoticeResponse"/>
      <wsdl:fault message="tns:handledException" name="handledException" />
    </wsdl:operation>

    <wsdl:operation name="nodoChiediCatalogoServiziV2">
      <wsdl:input message="tns:nodoChiediCatalogoServiziV2" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/nodoChiediCatalogoServiziV2" />
      <wsdl:output message="tns:nodoChiediCatalogoServiziV2Response" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/nodoChiediCatalogoServiziV2Response" />
      <wsdl:fault message="tns:handledException" name="handledException" />
    </wsdl:operation>

    <wsdl:operation name="activatePaymentNoticeV2">
      <wsdl:input message="tns:activatePaymentNoticeV2" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/activatePaymentNoticeV2" />
      <wsdl:output message="tns:activatePaymentNoticeV2Response" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/activatePaymentNoticeV2Response" />
      <wsdl:fault message="tns:handledException" name="handledException" />
    </wsdl:operation>

    <wsdl:operation name="sendPaymentOutcomeV2">
      <wsdl:input message="tns:sendPaymentOutcomeV2" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/sendPaymentOutcomeV2" />
      <wsdl:output message="tns:sendPaymentOutcomeV2Response" wsam:Action="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp/sendPaymentOutcomeV2Response" />
      <wsdl:fault message="tns:handledException" name="handledException" />
    </wsdl:operation>

  </wsdl:portType>

  <!-- step#1 -->
  <wsdl:binding name="nodeForPsp_Binding" type="tns:nodeForPsp_PortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />

    <wsdl:operation name="verifyPaymentNotice">
      <soap:operation soapAction="verifyPaymentNotice" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="handledException">
        <soap:fault name="handledException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activatePaymentNotice">
      <soap:operation soapAction="activatePaymentNotice" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="handledException">
        <soap:fault name="handledException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendPaymentOutcome">
      <soap:operation soapAction="sendPaymentOutcome" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="handledException">
        <soap:fault name="handledException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verificaBollettino">
      <soap:operation soapAction="verificaBollettino" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="handledException">
        <soap:fault name="handledException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="demandPaymentNotice">
      <soap:operation soapAction="demandPaymentNotice" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="handledException">
        <soap:fault name="handledException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="nodoChiediCatalogoServiziV2">
      <soap:operation soapAction="nodoChiediCatalogoServiziV2" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="handledException">
        <soap:fault name="handledException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activatePaymentNoticeV2">
      <soap:operation soapAction="activatePaymentNoticeV2" />
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="handledException">
        <soap:fault name="handledException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendPaymentOutcomeV2">
      <soap:operation soapAction="sendPaymentOutcomeV2" />
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="handledException">
        <soap:fault name="handledException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>

  </wsdl:binding>

  <wsdl:service name="nodeForPsp_Service">
    <wsdl:port name="nodeForPsp_Port" binding="tns:nodeForPsp_Binding">
      <soap:address location="http://pagopa-api.pagopa.gov.it/service/node/nodeForPsp" />
    </wsdl:port>

  </wsdl:service>

</wsdl:definitions>
