<fragment>
  <!-- extract info from request -->
  <set-variable name="requestInfo" value="@{
        // retrieve data from request body
        XElement request = context.Request.Body.As<XElement>(preserveContent: true);
        XElement body = request.Descendants(request.Name.Namespace + "Body").FirstOrDefault();

        var requestInfo = new JObject();

        requestInfo.Add(new JProperty("fiscalCode", ""));
  requestInfo.Add(new JProperty("noticeNumber", ""));
  requestInfo.Add(new JProperty("transactionId", ""));

  try {
  if (body != null ) {
  XElement primitive = (XElement) body.FirstNode;
  var fiscalCode = primitive.Descendants("fiscalCode").FirstOrDefault().Value;
  var noticeNumber = primitive.Descendants("noticeNumber").FirstOrDefault().Value;

  requestInfo["fiscalCode"] = fiscalCode;
  requestInfo["noticeNumber"] = noticeNumber;
  }
  }
  catch (Exception e) {
  // do nothing
  }
  return requestInfo.ToString();
  }" />

  <!-- the requestInfo MUST contains fiscalCode, noticeNumber and transactionId info -->
  <cache-lookup-value key="@{
        var domain = context.Variables.GetValueOrDefault<string>("domain", "nodo");
        var requestInfo = JObject.Parse((string)context.Variables["requestInfo"]);

        return domain + "_" + (string)requestInfo["fiscalCode"] + "_" + (string)requestInfo["noticeNumber"];
      }" variable-name="nodo_fiscalCode_noticeNumber" default-value="NONE" caching-type="external" />

  <cache-lookup-value key="@{
        var domain = context.Variables.GetValueOrDefault<string>("domain_eCommerce", "eCommerce");
        var requestInfo = JObject.Parse((string)context.Variables["requestInfo"]);

        return domain + "_" + (string)requestInfo["transactionId"];
      }" variable-name="eCommerce_transactionId" default-value="NONE" caching-type="external" />


  <!-- Setting baseNodeId based on nodo_fiscalCode_noticeNumber and eCommerce_transactionId values. NONE is False, !NONE is True -->
  <choose>
    <!-- True, * -->
    <when condition="@(!context.Variables.GetValueOrDefault<string>("nodo_fiscalCode_noticeNumber", "NONE").Equals("NONE"))">
    <!-- set baseNodeId -->
    <set-variable name="baseNodeId" value="@(context.Variables.GetValueOrDefault<string>("nodo_fiscalCode_noticeNumber", "NONE"))" />
  </when>
  <!-- False, * -->
  <otherwise>
    <choose>
      <!-- False, True -->
      <when condition="@(!context.Variables.GetValueOrDefault<string>("eCommerce_transactionId", "NONE").Equals("NONE"))">
      <!-- set baseNodeId -->
      <set-variable name="baseNodeId" value="@(context.Variables.GetValueOrDefault<string>("eCommerce_transactionId", "NONE"))" />
    </when>
    <!-- False, False -->
    <otherwise>
      <!-- LIST algorithm -->
      <set-variable name="enable_nm3_switch" value="{{enable-nm3-decoupler-switch}}" />
      <set-variable name="dataToSet" value="@{
var configuration = JArray.Parse(context.Variables.GetValueOrDefault<string>("configuration"));
var requestData = JObject.Parse((string)context.Variables["requestData"]);
bool enable_nm3_switch = context.Variables.GetValueOrDefault<string>("enable_nm3_switch", "").Equals("true");

      if (enable_nm3_switch) {
      foreach (JObject item in configuration) {
      bool ciFound = false;
      var cis = item.GetValue("cis").ToList();

      if (cis.Count == 0 || (cis.Count > 0 && cis.Contains(requestData.GetValue("ci")))) {
      ciFound = true;
      }
      if (ciFound) {
      return new JObject(
      new JProperty("nodeId", item.GetValue("node_id").ToString()),
      new JProperty("nodeUri", item.GetValue("node_uri").ToString()),
      new JProperty("ttl", requestData.GetValue("ttl"))
      ).ToString();
      }
      }
      }

      var baseNodeId = context.Variables.GetValueOrDefault<string>("baseNodeId", "");
      var baseUrl = context.Variables.GetValueOrDefault<string>("baseUrl", "");
      return new JObject(
      new JProperty("nodeId", baseNodeId),
      new JProperty("nodeUri", baseUrl),
      new JProperty("ttl", requestData.GetValue("ttl"))
      ).ToString();
      }" />

      <!-- cache store (key = eCommerce_transactionId, value = baseNodeId) -->
    </otherwise>
  </choose>
  <!-- cache store (key = nodo_fiscalCode_noticeNumber, value = baseNodeId) -->
</otherwise>
  </choose>





  </fragment>
