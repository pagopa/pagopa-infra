<fragment>
  <!-- the following block code is to override password XML element with default nodoAuthPassword -->
  <set-variable name="password" value="{{nodoAuthPassword}}" />
  <set-variable name="soapAction" value="@((string)context.Request.Headers.GetValueOrDefault("SOAPAction"))" />
  <set-body>
    @{
    // get request body content
    XElement doc = context.Request.Body.As<XElement>(preserveContent: true);
    try {
    XElement body = doc.Descendants(doc.Name.Namespace + "Body").FirstOrDefault();
    // get primitive
    XElement primitive = (XElement) body.FirstNode;
    var soapAction = (string)context.Variables["soapAction"];
    var primitives = new string[]{"nodoInviaRPT", "nodoInviaCarrelloRPT"};
    if (primitives.Contains(soapAction)) {
    // get prev field
    XElement password = primitive.Descendants("password").FirstOrDefault();
    String passwordValue = ((string)context.Variables["password"]);
    if (password != null) {
    password.Value = passwordValue;
    } else {
    password = XElement.Parse("<password>" + passwordValue + "</password>");
    primitive.AddFirst(password);
    }
    }
    else {
    // get prev field
    XElement prevField = primitive.Descendants("idChannel").FirstOrDefault();
    if (prevField == null) {
    prevField = primitive.Descendants("identificativoCanale").FirstOrDefault();
    }
    if (prevField == null) {
    prevField = primitive.Descendants("identificativoStazioneIntermediarioPA").FirstOrDefault();
    }
    // if password exists then set default password
    // otherwise add a password field with default value
    XElement password = primitive.Descendants("password").FirstOrDefault();
    String passwordValue = ((string) context.Variables["password"]);
    if (password != null) {
    password.Value = passwordValue;
    } else {
    password = XElement.Parse("<password>" + passwordValue + "</password>");
    prevField.AddAfterSelf(password);
    }
    }
    }
    catch (Exception e)
    {
    //  do nothing
    }
    return doc.ToString();;
    }
  </set-body>
  <set-header name="X-Forwarded-For" exists-action="override">
    <value>{{xForwardedFor}}</value>
  </set-header>
  <!-- update renewrequest after updating password field -->
  <!-- the variable is set in base policy -->
  <set-variable name="renewrequest" value="@(context.Request.Body.As<string>(preserveContent: true))" />
</fragment>
