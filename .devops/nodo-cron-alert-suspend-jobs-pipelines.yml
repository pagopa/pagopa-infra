trigger: none

pr: none

resources:
  repositories:
    - repository: templates
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v6.9.0
      endpoint: "io-azure-devops-github-ro"
    - repository: self
      type: git
      trigger:
        branches:
          include:
            - refs/heads/alert-suspend-cron-55FG123SD-*

variables:
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/alert-suspend-cron-') }}:
    branchName: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]
    alertKey: $[ split(variables['branchName'], '-')[3] ]
    timestamp: $[ split(variables['branchName'], '-')[4] ]
    env: $[ split(variables['branchName'], '-')[5] ]

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: Requirements
    displayName: 'Check For Requirements'
    steps:
      - task: AzureCLI@2
        inputs:
          azureSubscription: '$[ format('$(TF_AZURE_SERVICE_CONNECTION_PLAN_NAME_{0})', toUpper(variables['env'])) ]'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            # Install kubelogin
            echo "Installing kubelogin..."
            curl -LO https://github.com/Azure/kubelogin/releases/latest/download/kubelogin-linux-amd64.zip
            unzip kubelogin-linux-amd64.zip
            sudo mv bin/linux_amd64/kubelogin /usr/local/bin/
            rm -rf bin/ kubelogin-linux-amd64.zip

            # Verify installation
            kubelogin --version

            # Check if required variables are set
            if [ -z "$alertKey" ] || [ -z "$timestamp" ] || [ -z "$env" ]; then
              echo "Required variables are not set. Please check branch name format."
              exit 1
            fi
  - job: SuspendCronJobs
    displayName: 'Suspend Nodo Cron Jobs'
    steps:
      - template: templates/azure-kubeconfig-generator/template.yaml@templates
        parameters:
          AZURE_SERVICE_CONNECTION_NAME: '$[ format('$(TF_AZURE_SERVICE_CONNECTION_PLAN_NAME_{0})', toUpper(variables['env'])) ]'
          AKS_NAME: '$[ format('$(TF_AKS_{0}_NAME)', toUpper(variables['env'])) ]'
          AKS_API_SERVER_URL: '$[ format('$(TF_{0}_AKS_APISERVER_URL)', toUpper(variables['env'])) ]'
          AKS_AZURE_DEVOPS_SA_CA_CRT: '$[ format('$(TF_{0}_AKS_AZURE_DEVOPS_SA_CACRT)', toUpper(variables['env'])) ]'
          AKS_AZURE_DEVOPS_SA_TOKEN: '$[ format('$(TF_{0}_AKS_AZURE_DEVOPS_SA_TOKEN)', toUpper(variables['env'])) ]'

      - task: AzureCLI@2
        inputs:
          azureSubscription: '$[ format('$(TF_AZURE_SERVICE_CONNECTION_PLAN_NAME_{0})', toUpper(variables['env'])) ]'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            # List and verify cron jobs existence
            echo "Checking for cron jobs in nodo-cron namespace..."
            if ! kubectl get cronjobs -n nodo-cron; then
              echo "No cron jobs found in nodo-cron namespace"
              exit 1
            fi
