# only manual
trigger: none
pr: none

parameters:
  - name: 'DEV'
    displayName: 'Run on DEV environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'UAT'
    displayName: 'Run on UAT environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'PROD'
    displayName: 'Run on PROD environment'
    type: boolean
    default: True
    values:
      - False
      - True


pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: terraform
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v6.9.0
      endpoint: "io-azure-devops-github-ro"
    #Checkout tests repo that contains e2e tests to be executed after domain apply
    - repository: pagopaCheckoutTests
      type: github
      name: pagopa/pagopa-checkout-tests
      ref: main
      endpoint: 'io-azure-devops-github-ro'


variables:
  TIME_OUT: 15
  # working dir
  WORKING_DIR_APP: 'src/domains/ecommerce-app'
  WORKING_DIR_COMMON: 'src/domains/ecommerce-common'
  REGION_SHORT: "weu"
  DOMAIN_NAME: "ecommerce"

stages:
  #DEV
  - ${{ if eq(parameters['DEV'], true) }}:
    - template: './base-deploy-pipelines.yml'
      parameters:
        ENV: 'dev'
        ENV_FOLDER: '${{ variables.REGION_SHORT }}-dev'
        WORKING_DIR_APP: ${{ variables.WORKING_DIR_APP }}
        WORKING_DIR_COMMON: ${{ variables.WORKING_DIR_COMMON }}
        DEFINITION_NAME: ${{ variables.DOMAIN_NAME }}
        SC_PLAN_NAME: '$(TF_AZURE_SERVICE_CONNECTION_PLAN_NAME_DEV)'
        SC_APPLY_NAME: '$(TF_AZURE_SERVICE_CONNECTION_APPLY_NAME_DEV)'
        AKS_APISERVER_URL: '$(TF_DEV_AKS_APISERVER_URL)'
        AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_DEV_AKS_AZURE_DEVOPS_SA_CACRT)'
        AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_DEV_AKS_AZURE_DEVOPS_SA_TOKEN)'
        AKS_NAME: '$(TF_AKS_DEV_NAME)'
        POOL_NAME: '$(TF_POOL_NAME_DEV)'
  # E2E test
  - stage: "E2E_Tests_Checkout_DEV_environment"
    displayName: 'ðŸ§ª Running E2E test on DEV env'
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: dev_apply_ecommerce_app
    jobs:
      - job: e2e_tests
        steps:
          - template: .devops/azure-templates/e2e-tests.yaml@pagopaCheckoutTests
            parameters:
              ENVIRONMENT: DEV
              CHECKOUT_RESOURCE_REPO_NAME: pagopaCheckoutTests
  #UAT
  - ${{ if eq(parameters['UAT'], true) }}:
    - template: './base-deploy-pipelines.yml'
      parameters:
        ENV: 'uat'
        ENV_FOLDER: '${{ variables.REGION_SHORT }}-uat'
        WORKING_DIR_APP: ${{ variables.WORKING_DIR_APP }}
        WORKING_DIR_COMMON: ${{ variables.WORKING_DIR_COMMON }}
        DEFINITION_NAME: ${{ variables.DOMAIN_NAME }}
        SC_PLAN_NAME: '$(TF_AZURE_SERVICE_CONNECTION_PLAN_NAME_UAT)'
        SC_APPLY_NAME: '$(TF_AZURE_SERVICE_CONNECTION_APPLY_NAME_UAT)'
        AKS_APISERVER_URL: '$(TF_UAT_AKS_APISERVER_URL)'
        AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_UAT_AKS_AZURE_DEVOPS_SA_CACRT)'
        AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_UAT_AKS_AZURE_DEVOPS_SA_TOKEN)'
        AKS_NAME: '$(TF_AKS_UAT_NAME)'
        POOL_NAME: '$(TF_POOL_NAME_UAT)'
      # E2E test
    - stage: "E2E_Tests_Checkout_UAT_environment"
      displayName: 'ðŸ§ª Running E2E test on UAT env'
      pool:
        vmImage: 'ubuntu-latest'
      dependsOn: uat_apply_ecommerce_app
      jobs:
        - job: e2e_tests
          steps:
            - template: .devops/azure-templates/e2e-tests.yaml@pagopaCheckoutTests
              parameters:
                ENVIRONMENT: UAT
                CHECKOUT_RESOURCE_REPO_NAME: pagopaCheckoutTests
  #PROD
  - ${{ if eq(parameters['PROD'], true) }}:
    - template: './base-deploy-pipelines.yml'
      parameters:
        ENV: 'prod'
        ENV_FOLDER: '${{ variables.REGION_SHORT }}-prod'
        WORKING_DIR_APP: ${{ variables.WORKING_DIR_APP }}
        WORKING_DIR_COMMON: ${{ variables.WORKING_DIR_COMMON }}
        DEFINITION_NAME: ${{ variables.DOMAIN_NAME }}
        SC_PLAN_NAME: '$(TF_AZURE_SERVICE_CONNECTION_PLAN_NAME_PROD)'
        SC_APPLY_NAME: '$(TF_AZURE_SERVICE_CONNECTION_APPLY_NAME_PROD)'
        AKS_APISERVER_URL: '$(TF_PROD_AKS_APISERVER_URL)'
        AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_PROD_AKS_AZURE_DEVOPS_SA_CACRT)'
        AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_PROD_AKS_AZURE_DEVOPS_SA_TOKEN)'
        AKS_NAME: '$(TF_AKS_PROD_NAME)'
        POOL_NAME: '$(TF_POOL_NAME_PROD)'
    - stage:
      displayName: 'ðŸ’» Dashboards generation GHA'
      jobs:
        - job: generate_dashboard
          steps:
            - task: Bash@3
              displayName: 'Dashboard generation'
              inputs:
                targetType: "inline"
                script: |
                  echo "Launching ecommerce dashboard generation apply"
                  body=$(cat <<EOF
                  {
                      "ref": "main",
                      "inputs": {
                          "api-name": "ecommerce-checkout",
                          "environment": "prod",
                          "config-options": "{\"branch_ref\": \"$(Build.SourceBranchName)\"}"
                      }
                  }
                  EOF
                  )
                  echo "GHA trigger body $body"
                  curl -X POST https://api.github.com/repos/pagopa/pagopa-ecommerce-dashboard/actions/workflows/63761953/dispatches \
                  -H 'Content-Type: application/json' \
                  -H 'X-GitHub-Api-Version: 2022-11-28' \
                  -H "Authorization: token ${{ variables.PROD_AZURE_WEBHOOK_DASHBOARD_CREATION_TOKEN }}" \
                  --data "$body"
